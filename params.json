{"name":"Jamman-tools","tagline":"jamman-tools is a python script collection aimed at producing music very quickly using the JamMan loop sequencer by DigiTech","body":"### Description\r\n\r\njamman-tools is a python script collection aimed at producing music very quickly using the JamMan loop sequencer by DigiTech.\r\n\r\n### Workflow\r\n\r\n1) plug the jamman to your computer\r\n2) create a new directory, in which you copy the samples directories as is\r\n3) enter the directory (cd)\r\n4) jamman_all will generate a generic preview\r\n5) eventually use jamman_sequence to define the merging sequence\r\n\r\nOf course it is possible to prevent using the sequencer at all by doing it on the jamman itself (i.e. copy slot 10 to 11)\r\n\r\n### Scripts\r\n\r\n```\r\njamman_extract \r\n```\r\n\r\nWill move and rename the wav loop files to the root project directory\r\n\r\n```\r\njamman_sequence\r\n```\r\n\r\nWill let you define the rendering sequence\r\n\r\n```\r\njamman_render \r\n```\r\n\r\nWill then render the project\r\n\r\n```\r\njamman_compress \r\n```\r\n\r\nWill produce mp3 & Flac versions of the file to an 'encoded' subdir\r\n\r\n```\r\njamman_export \r\n```\r\n\r\nWill recursively copy all of the mp3 version of a directory structure to an \"exported\" directory in the current path\r\n\r\n```\r\njamman_clean \r\n```\r\n\r\nWill remove temporary files\r\n\r\n### TODO\r\n\r\n * packaging/installer\r\n * option parsing\r\n * jamman_sync or jamman_import","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}